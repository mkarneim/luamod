eclipse.jdt.file.withProperties { properties ->
  properties << ['org.eclipse.jdt.core.compiler.processAnnotations': 'enabled']
}

eclipse.classpath.file.beforeMerged { cp ->
  def apt_generated = new org.gradle.plugins.ide.eclipse.model.SourceFolder('.apt_generated', 'bin/main')
  mkdir(apt_generated.path)
  apt_generated.entryAttributes << [ignore_optional_problems: true]
  cp.entries.add(apt_generated)

  def apt_generated_tests = new org.gradle.plugins.ide.eclipse.model.SourceFolder('.apt_generated_tests', 'bin/test')
  mkdir(apt_generated_tests.path)
  apt_generated_tests.entryAttributes << [ignore_optional_problems: true]
  cp.entries.add(apt_generated_tests)
}

task eclipseFactorypath doLast {
  def writer = new StringWriter()
  def xml = new groovy.xml.MarkupBuilder(writer)
  xml.factorypath {
    sourceSets.each {
      it.annotationProcessorPath.each {
        factorypathentry kind: 'EXTJAR', id: it, enabled: true, runInBatchMode: false
      }
    }
  }
  File factorypath = file('.factorypath')
  factorypath.text = writer.toString()
}
tasks.eclipse.dependsOn eclipseFactorypath

task eclipseApt doLast {
  File jdtAptCorePrefs = file('.settings/org.eclipse.jdt.apt.core.prefs')
  jdtAptCorePrefs.parentFile.mkdir()
  jdtAptCorePrefs.text = """\
eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=true
org.eclipse.jdt.apt.genSrcDir=.apt_generated
org.eclipse.jdt.apt.reconcileEnabled=true
"""
}
tasks.eclipse.dependsOn eclipseApt
