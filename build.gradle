/*
 * Recompile annotation processor after change, for use in IDE.
 * - gradlew apt:jar
 */
buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

sourceCompatibility = '1.8'

task wrapper(type: Wrapper) { gradleVersion = '4.9' }

group = "net.wizardsoflua" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "wol"
version = "1.13.2-3.0.0-SNAPSHOT"

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20180921-1.13'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('build/resources/main/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                wol {
                    source sourceSets.main
                }
                'wol-test' {
                    source sourceSets.test
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                wol {
                    source sourceSets.main
                }
                'wol-test' {
                    source sourceSets.test
                }
            }
        }
    }
}

allprojects {
  repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven {
      name = "sonatype-ossrh-snapshots"
      url = "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
      name = "java-download"
      url = "http://download.java.net/maven/2/"
    }
  }
}

apply from: file('gradle-snippets/eclipse/annotation-processing.gradle')
allprojects {
  plugins.withId('eclipse') {
    project.apply from: rootProject.file('gradle-snippets/eclipse/mark-test-source-folders.gradle')
    project.apply from: rootProject.file('gradle-snippets/eclipse/rename-subproject.gradle')
  }
}

ext.libs = [
  assertj_core:             'org.assertj:assertj-core:2.5.0',
  auto_service:             'com.google.auto.service:auto-service:1.0-rc4',
  eclipse_compiler:         'org.eclipse.jdt:org.eclipse.jdt.compiler.apt:1.3.110',
  guava:                    'com.google.guava:guava:21.0',
  javapoet:                 'com.squareup:javapoet:1.10.0',
  javax_inject:             'javax.inject:javax.inject:1',
  jlhttp:                   'net.freeutils:jlhttp:2.4',
  jsr305:                   'com.google.code.findbugs:jsr305:3.0.1',
  junit_jupiter_engine:     'org.junit.jupiter:junit-jupiter-engine:5.4.2',
  junit_platform_launcher:  'org.junit.platform:junit-platform-launcher:1.4.2',
  rembulan_compiler:        'net.sandius.rembulan:rembulan-compiler:0.2-SNAPSHOT',
  rembulan_runtime:         'net.sandius.rembulan:rembulan-runtime:0.2-SNAPSHOT',
  rembulan_stdlib:          'net.sandius.rembulan:rembulan-stdlib:0.2-SNAPSHOT',
]

configurations {
  embed
  compile.extendsFrom(embed)
}

eclipseApt.dependsOn ':apt:jar'

dependencies {
  minecraft 'net.minecraftforge:forge:1.13.2-25.0.154'

  annotationProcessor project(':apt')
  annotationProcessor libs.auto_service
  compileOnly project(':apt')
  compileOnly libs.auto_service

  embed project(':extension-api')
  embed libs.jlhttp
  embed libs.rembulan_compiler, { exclude group: 'org.ow2.asm' } // asm is provided by Minecraft
  embed libs.rembulan_stdlib

  embed group: 'org.ow2.asm', name: 'asm', version:'5.0.4'
  embed group: 'org.ow2.asm', name: 'asm-analysis', version:'5.0.4'
  embed group: 'org.ow2.asm', name: 'asm-util', version:'5.0.4'

  testCompile libs.assertj_core
  testCompile libs.eclipse_compiler
  testCompile libs.junit_jupiter_engine
  testCompile libs.junit_platform_launcher
}

jar {
  from configurations.embed.collect {
    it.isDirectory() ? it : zipTree(it)
  }
}
